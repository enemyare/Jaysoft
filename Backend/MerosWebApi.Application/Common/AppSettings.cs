using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MerosWebApi.Application.Common
{
    public class AppSettings
    {
        /// <summary>
        /// Получает или задает имя WebAPI.
        /// </summary>
        /// <value>
        /// Имя WebAPI.
        /// </value>
        public string Name { get; set; }

        /// <summary>
        /// Получает или задает максимальное количество неудачных попыток входа.
        /// </summary>
        /// <value>
        /// Максимальное количество неудачных попыток входа.
        /// </value>
        public int MaxLoginFailedCount { get; set; }

        /// <summary>
        /// Получает или задает время ожидания (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неудачных попыток входа.
        /// </summary>
        /// <value>
        /// Время ожидания при неудачном входе (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неудачных попыток входа.
        /// </value>
        public int LoginFailedWaitingTime { get; set; }

        /// <summary>
        /// Получает или задает максимальное количество неподтвержденных адресов электронной почты.
        /// </summary>
        /// <value>
        /// Максимальное количество неподтвержденных адресов электронной почты.
        /// </value>
        public int MaxUnconfirmedEmailCount { get; set; }

        /// <summary>
        /// Получает или задает время ожидания (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неподтвержденных адресов электронной почты, прежде чем снова попытаться изменить свой адрес электронной почты.
        /// </summary>
        /// <value>
        /// Время ожидания (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неподтвержденных адресов электронной почты, прежде чем снова попытаться изменить свой адрес электронной почты.
        /// </value>
        public int UnconfirmedEmailWaitingTime { get; set; }

        /// <summary>
        /// Задает максимальное количество попыток получения кода верефикации по почте
        /// </summary>
        public int MaxVerificationCodeCount { get; set; }

        /// <summary>
        /// Задает время в течении которого код авторизации действителен
        /// </summary>
        public int VerificationCodeExpiresMinutes { get; set; }

        /// <summary>
        /// Задает время в секундах, которое пользователь должен подождать чтобы получить новый код верефикации на почту
        /// </summary>
        public int VerificationCodeWaitingTime { get; set; }

        /// <summary>
        /// Получает или задает URL, который будет использоваться для подтверждения адреса электронной почты.
        /// </summary>
        /// <value>
        /// URL, который будет использоваться для подтверждения адреса электронной почты.
        /// </value>
        public string ConfirmEmailUrl { get; set; }

        /// <summary>
        /// Получает или задает максимальное количество неудачных попыток сброса пароля.
        /// </summary>
        /// <value>
        /// Максимальное количество неудачных попыток сброса пароля.
        /// </value>
        public int MaxResetPasswordCount { get; set; }

        /// <summary>
        /// Получает или задает время ожидания (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неудачных попыток сброса пароля.
        /// </summary>
        /// <value>
        /// Время ожидания (в секундах), которое пользователь должен подождать, если он превысил максимальное количество неудачных попыток сброса пароля.
        /// </value>
        public int ResetPasswordWaitingTime { get; set; }

        /// <summary>
        /// Получает или задает срок действия запроса на сброс пароля (в секундах).
        /// </summary>
        /// <value>
        /// Срок действия запроса на сброс пароля (в секундах).
        /// </value>
        public int ResetPasswordValidTime { get; set; }

        /// <summary>
        /// Получает или задает URL, который будет использоваться для подтверждения сброса пароля.
        /// </summary>
        /// <value>
        /// URL, который будет использоваться для подтверждения сброса пароля.
        /// </value>
        public string ResetPasswordUrl { get; set; }
    }
}
